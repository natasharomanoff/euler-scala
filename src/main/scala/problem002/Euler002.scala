
package problem002

/* 
 * Even Fibonacci numbers
 * 
 * Each new term in the Fibonacci sequence is generated by 
 * adding the previous two terms. 
 * 
 * By starting with 1 and 2, the first 10 terms will be:
 * 
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values 
 * do not exceed four million, find the sum of the even-valued terms. 
 * 
 */

object Euler002 {
  
  def fibonacci = {
    def next(i: Int, j: Int): Stream[Int] = Stream.cons(i, next(j, i + j))
    next(1, 1)
  }

  def isEven(n: Int): Boolean = n % 2 == 0
  
  def solution: Int = fibonacci.takeWhile(e => e < 4000000).filter(isEven).sum

  def main(args: Array[String]): Unit = { println("Result is " + solution) }
  

}
	